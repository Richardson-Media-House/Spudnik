import { MessageEmbed } from 'discord.js';
import { SchemaEntry } from 'klasa';
import { StatsGeneral, StatsUptime, StatsUsage } from '@root/commands/bot-info/stats';

export interface LanguageKeys {
	DEFAULT: (key: string) => string;
	DEFAULT_LANGUAGE: string;
	PREFIX_REMINDER: (prefix: string) => string;
	SETTING_GATEWAY_VALUE_FOR_KEY_NOEXT: (data: string, key: string) => string;
	SETTING_GATEWAY_VALUE_FOR_KEY_ALREXT: (data: string, key: string) => string;
	SETTING_GATEWAY_UNCONFIGURABLE_FOLDER: string;
	SETTING_GATEWAY_CHOOSE_KEY: (keys: string[]) => string;
	SETTING_GATEWAY_KEY_NOEXT: (key: string) => string;
	SETTING_GATEWAY_UNCONFIGURABLE_KEY: (key: string) => string;
	SETTING_GATEWAY_INVALID_TYPE: string;
	SETTING_GATEWAY_INVALID_FILTERED_VALUE: (entry: SchemaEntry, value: unknown) => string;
	SETTING_GATEWAY_MISSING_VALUE: (entry: SchemaEntry, value: unknown) => string;
	SETTING_GATEWAY_DUPLICATE_VALUE: (entry: SchemaEntry, value: unknown) => string;
	RESOLVER_MULTI_TOO_FEW: (name: string, min?: number) => string;
	RESOLVER_INVALID_BATTLETAG: (name: string) => string;
	RESOLVER_INVALID_BOOL: (name: string) => string;
	RESOLVER_INVALID_CHANNEL: (name: string) => string;
	RESOLVER_INVALID_CUSTOM: (name: string, type: string) => string;
	RESOLVER_INVALID_DATE: (name: string) => string;
	RESOLVER_INVALID_DURATION: (name: string) => string;
	RESOLVER_INVALID_EMOJI: (name: string) => string;
	RESOLVER_INVALID_FLOAT: (name: string) => string;
	RESOLVER_INVALID_GUILD: (name: string) => string;
	RESOLVER_INVALID_HEXCOLOR: (name: string) => string;
	RESOLVER_INVALID_INT: (name: string) => string;
	RESOLVER_INVALID_LITERAL: (name: string) => string;
	RESOLVER_INVALID_MEMBER: (name: string) => string;
	RESOLVER_INVALID_MESSAGE: (name: string) => string;
	RESOLVER_INVALID_PIECE: (name: string, piece: string) => string;
	RESOLVER_INVALID_REGEX_MATCH: (name: string, pattern: string) => string;
	RESOLVER_INVALID_ROLE: (name: string) => string;
	RESOLVER_INVALID_STRING: (name: string) => string;
	RESOLVER_INVALID_TIME: (name: string) => string;
	RESOLVER_INVALID_URL: (name: string) => string;
	RESOLVER_INVALID_USER: (name: string) => string;
	RESOLVER_STRING_SUFFIX: string;
	RESOLVER_MINMAX_EXACTLY: (name: string, min: number, suffix: string) => string;
	RESOLVER_MINMAX_BOTH: (name: string, min: number, max: number, suffix: string) => string;
	RESOLVER_MINMAX_MIN: (name: string, min: number, suffix: string) => string;
	RESOLVER_MINMAX_MAX: (name: string, max: number, suffix: string) => string;
	REACTIONHANDLER_PROMPT: string;
	COMMANDMESSAGE_MISSING: string;
	COMMANDMESSAGE_MISSING_REQUIRED: (name: string) => string;
	COMMANDMESSAGE_MISSING_OPTIONALS: (possibles: string) => string;
	COMMANDMESSAGE_NOMATCH: (possibles: string) => string;
	// eslint-disable-next-line max-len
	MONITOR_COMMAND_HANDLER_REPROMPT: (tag: string, name: string, time: string, abortOptions: readonly string[]) => string;
	// eslint-disable-next-line max-len
	MONITOR_COMMAND_HANDLER_REPEATING_REPROMPT: (tag: string, name: string, time: string, cancelOptions: readonly string[]) => string;
	MONITOR_COMMAND_HANDLER_ABORTED: string;
	INHIBITOR_COOLDOWN: (remaining: number) => string;
	INHIBITOR_DISABLED_GUILD: string;
	INHIBITOR_DISABLED_GLOBAL: string;
	INHIBITOR_MISSING_BOT_PERMS: (missing: string) => string;
	INHIBITOR_NSFW: string;
	INHIBITOR_PERMISSIONS: string;
	INHIBITOR_REQUIRED_SETTINGS: (settings: readonly string[]) => string;
	INHIBITOR_RUNIN: (types: string) => string;
	INHIBITOR_RUNIN_NONE: (name: string) => string;
	COMMAND_BLACKLIST_DESCRIPTION: string;
	COMMAND_BLACKLIST_SUCCESS: (usersAdded: readonly string[], usersRemoved: readonly string[], guildsAdded: readonly string[], guildsRemoved: readonly string[]) => string;
	COMMAND_EVAL_DESCRIPTION: string;
	COMMAND_EVAL_EXTENDEDHELP: string;
	COMMAND_EVAL_ERROR: (time, output: string, type: string) => string;
	COMMAND_EVAL_OUTPUT: (time, output: string, type: string) => string;
	COMMAND_EVAL_SENDFILE: (time: string, type: string) => string;
	COMMAND_EVAL_SENDCONSOLE: (time: string, type: string) => string;
	COMMAND_UNLOAD: (type: string, name: string) => string;
	COMMAND_UNLOAD_DESCRIPTION: string;
	COMMAND_UNLOAD_WARN: string;
	COMMAND_TRANSFER_ERROR: string;
	COMMAND_TRANSFER_SUCCESS: (type: string, name: string) => string;
	COMMAND_TRANSFER_FAILED: (type: string, name: string) => string;
	COMMAND_TRANSFER_DESCRIPTION: string;
	COMMAND_RELOAD: (type, name: string, time: string) => string;
	COMMAND_RELOAD_FAILED: (type: string, name: string) => string;
	COMMAND_RELOAD_ALL: (type: string, time: string) => string;
	COMMAND_RELOAD_EVERYTHING: (time: string) => string;
	COMMAND_RELOAD_DESCRIPTION: string;
	COMMAND_REBOOT: string;
	COMMAND_REBOOT_DESCRIPTION: string;
	COMMAND_LOAD: (time, type: string, name: string) => string;
	COMMAND_LOAD_FAIL: string;
	COMMAND_LOAD_ERROR: (type, name: string, error: string) => string;
	COMMAND_LOAD_DESCRIPTION: string;
	COMMAND_PING: string;
	COMMAND_PING_DESCRIPTION: string;
	COMMAND_PINGPONG: (diff: string, ping: string) => string;
	COMMAND_INVITE: () => string;
	COMMAND_INVITE_DESCRIPTION: string;
	COMMAND_INFO: string;
	COMMAND_INFO_DESCRIPTION: string;
	COMMAND_HELP_DESCRIPTION: string;
	COMMAND_HELP_NO_EXTENDED: string;
	COMMAND_HELP_DM: string;
	COMMAND_HELP_NODM: string;
	COMMAND_HELP_USAGE: (usage: string) => string;
	COMMAND_HELP_EXTENDED: string;
	COMMAND_ENABLE: (type: string, name: string) => string;
	COMMAND_ENABLE_DESCRIPTION: string;
	COMMAND_DISABLE: (type: string, name: string) => string;
	COMMAND_DISABLE_DESCRIPTION: string;
	COMMAND_DISABLE_WARN: string;
	COMMAND_CONF_NOKEY: string;
	COMMAND_CONF_NOVALUE: string;
	COMMAND_CONF_GUARDED: (name: string) => string;
	COMMAND_CONF_UPDATED: (key: string, response: string) => string;
	COMMAND_CONF_KEY_NOT_ARRAY: string;
	COMMAND_CONF_GET_NOEXT: (key: string) => string;
	COMMAND_CONF_GET: (key: string, value: string) => string;
	COMMAND_CONF_RESET: (key: string, response: string) => string;
	COMMAND_CONF_NOCHANGE: (key: string) => string;
	COMMAND_CONF_SERVER_DESCRIPTION: string;
	COMMAND_CONF_SERVER: (key: string, list: string) => string;
	COMMAND_CONF_USER_DESCRIPTION: string;
	COMMAND_CONF_USER: (key: string, list: string) => string;
	COMMAND_STATS: (color: number, stats: StatsGeneral, uptime: StatsUptime, usage: StatsUsage, dependencies: string[]) => MessageEmbed;
	COMMAND_STATS_DESCRIPTION: string;
	MESSAGE_PROMPT_TIMEOUT: string;
	TEXT_PROMPT_ABORT_OPTIONS: readonly string[];

	STARBOARD_AUTHOR: string;
	STARBOARD_CHANNEL: string;
	STARBOARD_JUMP: string;
	STARBOARD_LINK: string;
	STARBOARD_MESSAGE: string;
}
